apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  labels:
    crossplane.io/xrd: xdemorepositories.demo.loft.sh
  name: demorepository
spec:
  compositeTypeRef:
    apiVersion: demo.loft.sh/v1alpha1
    kind: XDemoRepository
  mode: Resources
  publishConnectionDetailsWithStoreConfigRef:
    name: default
  resources:
    - base:
        apiVersion: repo.github.upbound.io/v1alpha1
        kind: Repository
        metadata:
          name: repo-name
        spec:
          forProvider:
            description: Repo description
            name: repo-name
            template:
              - includeAllBranches: true
                owner: loft-demos
                repository: vcluster-platform-demo-app-template
            visibility: public
          managementPolicies:
            - Create
            - Observe
            - Delete
          providerConfigRef:
            name: github-provider-config
      name: repository
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          type: FromCompositeFieldPath
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.name
          type: FromCompositeFieldPath
      readinessChecks:
        - matchCondition:
            status: 'True'
            type: Ready
          type: MatchCondition
    - base:
        apiVersion: repo.github.upbound.io/v1alpha1
        kind: RepositoryFile
        metadata:
          name: repo-name
        spec:
          forProvider:
            branch: main
            file: helm-chart/Chart.yaml
            overwriteOnCreate: true
            repository: repo-name
          managementPolicies:
            - Create
            - Observe
          providerConfigRef:
            name: github-provider-config
      name: helm-chart-chart
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-helm-chart-chart'
                type: Format
              type: string
          type: FromCompositeFieldPath
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.repository
          type: FromCompositeFieldPath
        - combine:
            strategy: string
            string:
              fmt: |
                apiVersion: v2
                name: %s
                description: A Helm chart for simple echo app
                type: application
                version: 1.4.0
                appVersion: 0.0.1
            variables:
              - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.content
          type: CombineFromComposite
      readinessChecks:
        - matchCondition:
            status: 'True'
            type: Ready
          type: MatchCondition
    - base:
        apiVersion: repo.github.upbound.io/v1alpha1
        kind: RepositoryFile
        metadata:
          name: repo-name
        spec:
          forProvider:
            branch: main
            file: helm-chart/values.yaml
            overwriteOnCreate: true
            repository: repo-name
          managementPolicies:
            - Create
            - Observe
          providerConfigRef:
            name: github-provider-config
      name: helm-chart-values
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-helm-chart-values'
                type: Format
              type: string
          type: FromCompositeFieldPath
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.repository
          type: FromCompositeFieldPath
        - combine:
            strategy: string
            string:
              fmt: |
                replicaCount: 1
                image:
                  repository: ghcr.io/loft-demos/%s
                  pullPolicy: IfNotPresent
                  # use Chart appVersion if not set as value
                  tag: ""
                  args:
                    text: echo v1
                imagePullSecrets:
                  - name: ghcr-login-secret
                deployment:
                  # used to specify commit sha in CI job
                  commit: 62c016441f71377512dd6acbaa88a791cbbf5d1f
                serviceAccount:
                  # Specifies whether a service account should be created
                  create: true
                  # Annotations to add to the service account
                  annotations: {}
                  # The name of the service account to use.
                  # If not set and create is true, a name is generated using the fullname template
                  name: echo-sa
                podSecurityContext: {}
                # fsGroup: 2000
                securityContext: {}
                autoscaling:
                  enabled: false
                service:
                  type: ClusterIP
                  port: 8080
                ingress:
                  enabled: true
                  annotations:
                    kubernetes.io/tls-acme: 'true'
                    nginx.ingress.kubernetes.io/ssl-passthrough: 'false'
                    nginx.ingress.kubernetes.io/backend-protocol: 'HTTP'
                  hosts:
                    - host: %s
                  tls:
                    - hosts:
                        - %s
                resources:
                  limits:
                    cpu: 200m
                    memory: 256Mi
                  requests:
                    cpu: 100m
                    memory: 128Mi
                nodeSelector: {}
                tolerations: []
                affinity: {}
            variables:
              - fromFieldPath: spec.name
              - fromFieldPath: spec.loftDemoDomain
              - fromFieldPath: spec.loftDemoDomain
          toFieldPath: spec.forProvider.content
          type: CombineFromComposite
      readinessChecks:
        - matchCondition:
            status: 'True'
            type: Ready
          type: MatchCondition
    - base:
        apiVersion: repo.github.upbound.io/v1alpha1
        kind: Branch
        metadata:
          name: feature-branch
        spec:
          forProvider:
            branch: feature-ui-table-layout
          managementPolicies:
            - Create
            - Observe
          providerConfigRef:
            name: github-provider-config
      name: repo-feature-branch
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-feature-branch'
                type: Format
              type: string
          type: FromCompositeFieldPath
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.repository
          type: FromCompositeFieldPath
      readinessChecks:
        - matchCondition:
            status: 'True'
            type: Ready
          type: MatchCondition
    - base:
        apiVersion: repo.github.upbound.io/v1alpha1
        kind: RepositoryWebhook
        metadata:
          name: argo-webhook
        spec:
          forProvider:
            active: true
            configuration:
              - contentType: json
                insecureSsl: false
                urlSecretRef:
                  key: url
                  name: argo-webhook-url
            events:
              - push
              - pull_request
          managementPolicies:
            - Create
            - Observe
          providerConfigRef:
            name: github-provider-config
      name: argo-webhook
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-argo-webhook'
                type: Format
              type: string
          type: FromCompositeFieldPath
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.repository
          type: FromCompositeFieldPath
        - fromFieldPath: spec.virtualClusterNamespace
          toFieldPath: spec.forProvider.configuration[0].urlSecretRef.namespace
          type: FromCompositeFieldPath
      readinessChecks:
        - matchCondition:
            status: 'True'
            type: Ready
          type: MatchCondition
    - base:
        apiVersion: repo.github.upbound.io/v1alpha1
        kind: RepositoryWebhook
        metadata:
          name: argo-appset-webhook
        spec:
          forProvider:
            active: true
            configuration:
              - contentType: json
                insecureSsl: false
                urlSecretRef:
                  key: url
                  name: argo-appset-webhook-url
            events:
              - push
              - pull_request
          managementPolicies:
            - Create
            - Observe
          providerConfigRef:
            name: github-provider-config
      name: argo-appset-webhook
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-argo-appset-webhook'
                type: Format
              type: string
          type: FromCompositeFieldPath
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.repository
          type: FromCompositeFieldPath
        - fromFieldPath: spec.virtualClusterNamespace
          toFieldPath: spec.forProvider.configuration[0].urlSecretRef.namespace
          type: FromCompositeFieldPath
      readinessChecks:
        - matchCondition:
            status: 'True'
            type: Ready
          type: MatchCondition
