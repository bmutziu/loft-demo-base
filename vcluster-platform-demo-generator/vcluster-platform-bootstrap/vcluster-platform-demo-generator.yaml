apiVersion: management.loft.sh/v1
kind: VirtualClusterTemplate
metadata:
  name: vcluster-platform-demo-generator
spec:
  displayName: vCluster Platform Demo Generator
  description: >-
    The vCluster Platform Demo Generator template creates a vCluster Platform
    Hierarchical Demo Environment management vCluster that leverages the
    vCluster Hierarchical Architecture with the vCluster Platform to create
    cost-effective and efficient ephemeral vCluster Platform demo environments.
  owner:
    team: loft-admins
  template:
    metadata: {}
    instanceTemplate:
      metadata: {}
    pro: {}
    helmRelease:
      chart:
        name: vcluster
        version: 0.21.0
      values: |-
        sync:
          toHost:
            ingresses:
              enabled: true
    accessPoint:
      ingress: {}
    spaceTemplate:
      metadata: {}
  versions:
    - template:
        metadata: {}
        instanceTemplate:
          metadata:
            annotations:
              loft.sh/custom-links: >-
                https://{{ .Values.loft.virtualClusterName }}.test.deepseadevops.net
        apps:
          - name: demo-vcluster-platform
            namespace: loft
            version: 4.1.0
            parameters: |
              domain: >-
                {{ .Values.loft.virtualClusterName }}.test.deepseadevops.net
              uiLogoURL: '{{ .Values.uiLogoURL }}'
          - name: demo-vcluster-platform-configure-admins
            namespace: loft
          - name: demo-argocd
            namespace: argocd
            releaseName: argocd
            version: 7.3.6
            parameters: |
              appValues: |
                configs:
                  cm:
                    create: true
                    application.resourceTrackingMethod: annotation
                  params:
                    "server.insecure": true
                    timeout.reconciliation: 0
                  rbac:
                    policy.csv: |-
                      g, Administration, role:admin
                      g, Sales, role:admin
                      g, Engineering, role:admin
                server:
                  ingress:
                    enabled: true
                    annotations:
                      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
                      cert-manager.io/cluster-issuer: lets-encrypt-http-issuer
                      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
                    ingressClassName: "nginx"
                    hostname: argocd-{{ .Values.loft.virtualClusterName }}.test.deepseadevops.net
                    tls: true
                  ingressGrpc:
                    enabled: true
                    annotations:
                      cert-manager.io/cluster-issuer: lets-encrypt-http-issuer
                      nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
                    ingressClassName: "nginx"
                    hostname: argocd-grpc-{{ .Values.loft.virtualClusterName }}.test.deepseadevops.net
                    tls: true
                  certificate:
                    enabled: true
                    domain: argocd-{{ .Values.loft.virtualClusterName }}.test.deepseadevops.net
                    additionalHosts:
                      - argocd-grpc-{{ .Values.loft.virtualClusterName }}.test.deepseadevops.net
                    issuer:
                      group: "cert-manager.io"
                      kind: "ClusterIssuer"
                      name: "lets-encrypt-http-issuer"
                ## ApplicationSet controller
                applicationSet:
                  enabled: true
                  ingress:
                    enabled: true
                    ingressClassName: "nginx"
                    annotations:
                      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
                    hostname: argocd-appset-{{ .Values.loft.virtualClusterName }}.test.deepseadevops.net
                    tls: true
                  certificate:
                    enabled: true
                    domain: argocd-appset-{{ .Values.loft.virtualClusterName }}.test.deepseadevops.net
                    issuer:
                      group: "cert-manager.io"
                      kind: "ClusterIssuer"
                      name: "lets-encrypt-http-issuer"
          - name: demo-crossplane
            namespace: crossplane-system
            version: 1.16.0
          - name: demo-hvc-platform-gitops
            namespace: argocd
            parameters: |
              virtualClusterDomain: >-
                {{ .Values.loft.virtualClusterName }}.{{
                .Values.loft.clusterAnnotations.domain }}
        objects: |
          apiVersion: v1
          kind: Namespace
          metadata:
            name: loft
          ---
          apiVersion: v1
          kind: Secret
          metadata:
            name: oidc-secret
            namespace: loft
            labels:
              loft.sh/project-secret-name: oidc-secret
          type: Opaque
          ---
          apiVersion: v1
          kind: Secret
          metadata:
            name: ghcr-login-secret
            namespace: loft
            labels:
              loft.sh/project-secret-name: ghcr-login-secret
          data:
            .dockerconfigjson: e30K
          type: kubernetes.io/dockerconfigjson
          ---
          apiVersion: v1
          kind: Namespace
          metadata:
            name: argocd
          ---
          apiVersion: v1
          kind: Secret
          metadata:
            name: loft-demo-org-cred
            namespace: argocd
            labels:
              argocd.argoproj.io/secret-type: repo-creds
              loft.sh/project-secret-name: loft-demo-org-cred
          type: Opaque
          ---
          apiVersion: v1
          kind: Namespace
          metadata:
            name: crossplane-system
          ---
          apiVersion: v1
          kind: Secret
          metadata:
            name: github-provider-secret
            namespace: crossplane-system
            labels:
              loft.sh/project-secret-name: crossplane-github-provider-secret
          type: Opaque
          ---
        pro:
          enabled: true
        helmRelease:
          chart:
            version: 0.21.0
          values: |
            external:
              platform:
                autoSleep:
                  afterInactivity: 792000
                autoDelete:
                  afterInactivity: 7777000
            sync:
              toHost:
                ingresses:
                  enabled: true
              fromHost:
                nodes:
                  enabled: true
                  selector:
                    all: true
            controlPlane:
              backingStore:
                etcd:
                  embedded:
                    enabled: true
              coredns:
                embedded: true
              statefulSet:
                persistence:
                  volumeClaim:
                    storageClass: "gp2"  
        accessPoint:
          ingress: {}
        spaceTemplate:
          metadata: {}
      parameters:
        - variable: uiLogoURL
          label: UI Logo uiLogoURL
          description: Allows overriding default ui settings logo
          defaultValue: https://www.vcluster.com/pro/docs/media/vclusterpro_orange.svg
        - variable: k8sVersion
          label: k8sVersion
          description: Please select Kubernetes version
          options:
            - v1.30.2
            - v1.29.6
            - v1.28.11
            - v1.27.9
            - v1.26.15
          defaultValue: v1.29.6
        - variable: branch
          label: vCluster Platform GitOps Repo Branch
          description: >-
            Allows overriding the default branch used for the vCluster Platform
            Demo Generator GitOps repository
          defaultValue: main
      version: 4.1.0
    - template:
        metadata:
          annotations:
            sleepmode.loft.sh/delete-after: '31536000'
            sleepmode.loft.sh/sleep-after: '28800'
        instanceTemplate:
          metadata:
            annotations:
              loft.sh/custom-links: >-
                https://{{ .Values.loft.virtualClusterName }}.{{
                .Values.loft.clusterAnnotations.domain }}
        pro:
          enabled: true
        helmRelease:
          chart:
            version: 0.20.0-beta.12
          values: |-
            sync:
              toHost:
                ingresses:
                  enabled: true
        accessPoint:
          ingress: {}
        spaceTemplate:
          metadata: {}
      version: 0.0.0
  access:
    - verbs:
        - '*'
      subresources:
        - '*'
      teams:
        - loft-admins
    - verbs:
        - get
      users:
        - '*'
